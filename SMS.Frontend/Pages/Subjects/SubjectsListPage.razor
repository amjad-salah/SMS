@page "/subjects/"
@using SMS.Models.DTOs.Subjects
@attribute [Authorize]

@if (_isLoading)
{
    <div class="d-flex justify-content-center align-items-center">
        <MudProgressCircular Size="Size.Medium" Indeterminate="true"/>
    </div>
}
else if (_subjects != null)
{
    <MudRTLProvider RightToLeft="true">
        <MudFab Size="Size.Medium" StartIcon="@Icons.Material.Filled.Add"
                Class="mb-10"
                @onclick="@(() => NavManager.NavigateTo($"subjects/add"))"
                Color="Color.Dark"/>
        <MudTable Items="@_subjects" Dense Hover Filter="new Func<SubjectDto, bool>(FilterFunc1)" Elevation="4">
            <ToolBarContent>
                <MudText Typo="Typo.h4">المواد</MudText>
                <MudSpacer/>
                <MudTextField @bind-Value="_searchText" Placeholder="بحث بالإسم..."
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"
                              Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>

                <MudTh>
                    <MudTableSortLabel SortBy="new Func<SubjectDto, object>(x => x.Name)">
                        الإسم
                    </MudTableSortLabel>
                </MudTh>
                <MudTh>المستوى</MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.Name</MudTd>
                <MudTd>@context.Grade?.Name</MudTd>
                <MudTd>
                    <MudFab Size="Size.Small" StartIcon="@Icons.Material.Filled.ReadMore"
                            Class="me-1"
                            @onclick="@(() => NavManager.NavigateTo($"subjects/{context.Id}"))"
                            Color="Color.Default"/>
                    <MudFab Size="Size.Small" StartIcon="@Icons.Material.Filled.Edit"
                            Class="me-1"
                            @onclick="@(() => NavManager.NavigateTo($"subjects/edit/{context.Id}"))"
                            Color="Color.Primary"/>
                    <MudFab Size="Size.Small" StartIcon="@Icons.Material.Filled.Delete"
                            @onclick="@(() => NavManager.NavigateTo($"subjects/delete/{context.Id}"))"
                            Color="Color.Error"/>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager/>
            </PagerContent>
        </MudTable>
    </MudRTLProvider>
}

@code {
    private List<SubjectDto>? _subjects;
    private bool _isLoading = false;
    private string _searchText = "";

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;

        var res = await ApiClient.GetFromJsonAsync<SubjectsResponseDto>("/api/subjects");

        if (res is { Success: true })
        {
            _subjects = res.Subjects;
        }

        _isLoading = false;
    }
    
    private bool FilterFunc1(SubjectDto element)
    {
        return FilterFunc(element, _searchText);
    }

    private bool FilterFunc(SubjectDto element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Grade!.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }

}