@page "/lessons"
@using SMS.Models.DTOs.Lessons
@attribute [Authorize(Roles = "Admin,Teacher,Support")]

@if (_isLoading)
{
    <div class="d-flex justify-content-center align-items-center">
        <MudProgressCircular Size="Size.Medium" Indeterminate="true"/>
    </div>
}
else if (_lessons != null)
{
    <MudRTLProvider RightToLeft="true">
        <MudFab Size="Size.Medium" StartIcon="@Icons.Material.Filled.Add"
                Class="mb-10"
                @onclick="@(() => NavManager.NavigateTo($"lessons/add"))"
                Color="Color.Dark"/>
        <MudTable Items="@_lessons" Dense Hover Filter="new Func<LessonDto, bool>(FilterFunc1)" Elevation="4">
            <ToolBarContent>
                <MudText Typo="Typo.h4">الحصص</MudText>
                <MudSpacer/>
                <MudTextField @bind-Value="_searchText" Placeholder="بحث بإسم المادة، الفصل أو الأستاذ..."
                              Adornment="Adornment.Start"
                              AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium"
                              Class="mt-0"></MudTextField>
            </ToolBarContent>
            <HeaderContent>

                <MudTh>اليوم</MudTh>
                <MudTh>زمن البداية</MudTh>
                <MudTh>زمن النهاية</MudTh>
                <MudTh>المادة</MudTh>
                <MudTh>الفصل</MudTh>
                <MudTh></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@Enum.GetName(context.Day.GetType(), context.Day)</MudTd>
                <MudTd>@context.StartTime</MudTd>
                <MudTd>@context.EndTime</MudTd>
                <MudTd>@context.Subject?.Name</MudTd>
                <MudTd>@context.Class?.Name</MudTd>
                <MudTd>
                    <MudFab Size="Size.Small" StartIcon="@Icons.Material.Filled.Edit"
                            Class="me-1"
                            @onclick="@(() => NavManager.NavigateTo($"lessons/edit/{context.Id}"))"
                            Color="Color.Primary"/>
                    <MudFab Size="Size.Small" StartIcon="@Icons.Material.Filled.Delete"
                            @onclick="@(() => NavManager.NavigateTo($"lessons/delete/{context.Id}"))"
                            Color="Color.Error"/>
                </MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager/>
            </PagerContent>
        </MudTable>
    </MudRTLProvider>
}

@code {
    private List<LessonDto>? _lessons;
    private bool _isLoading = false;
    private string _searchText = "";

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;

        var res = await ApiClient.GetFromJsonAsync<LessonsResponseDto>("/api/lessons");

        if (res is { Success: true })
        {
            _lessons = res.Lessons!;
        }

        _isLoading = false;
    }
    
    private bool FilterFunc1(LessonDto element)
    {
        return FilterFunc(element, _searchText);
    }

    private bool FilterFunc(LessonDto element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Subject!.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Class!.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Teacher!.FullName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }

}